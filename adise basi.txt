
CREATE TABLE Cards (
  Cid tinyint NOT NULL,
  Figure enum('1', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K') NOT NULL,
  Class enum('heart', 'spade', 'club', 'diamond') NOT NULL,
  Pid integer NULL DEFAULT NULL,
  PRIMARY KEY (Cid, Figure, Class)
);
INSERT INTO Cards(Cid, Figure, Class) VALUES
(1, '1', 'heart'),
(2, '2', 'heart'),
(3, '3', 'heart'),
(4, '4', 'heart'),
(5, '5', 'heart'),
(6, '6', 'heart'),
(7, '7', 'heart'),
(8, '8', 'heart'),
(9, '9', 'heart'),
(10, '10', 'heart'),
(11, 'J', 'heart'),
(12, 'Q', 'heart'),
(13, 'K', 'heart'),
(14, '1', 'diamond'),
(15, '2', 'diamond'),
(16, '3', 'diamond'),
(17, '4', 'diamond'),
(18, '5', 'diamond'),
(19, '6', 'diamond'),
(20, '7', 'diamond'),
(21, '8', 'diamond'),
(22, '9', 'diamond'),
(23, '10', 'diamond'),
(24, 'J', 'diamond'),
(25, 'Q', 'diamond'),
(26, 'K', 'diamond'),
(27, '1', 'club'),
(28, '2', 'club'),
(29, '3', 'club'),
(30, '4', 'club'),
(31, '5', 'club'),
(32, '6', 'club'),
(33, '7', 'club'),
(34, '8', 'club'),
(35, '9', 'club'),
(36, '10', 'club'),
(37, 'J', 'club'),
(38, 'Q', 'club'),
(39, 'K', 'club'),
(40, '1', 'spade'),
(41, '2', 'spade'),
(42, '3', 'spade'),
(43, '4', 'spade'),
(44, '5', 'spade'),
(45, '6', 'spade'),
(46, '7', 'spade'),
(47, '8', 'spade'),
(48, '9', 'spade'),
(49, '10', 'spade'),
(50, 'J', 'spade'),
(51, 'Q', 'spade'),
(52, 'K', 'spade');




CREATE TABLE `players` (
 `Pid` INTEGER NOT NULL,
 `Username` VARCHAR(20) DEFAULT NULL,
 `Token` VARCHAR(100) DEFAULT NULL,
 `LastAction` TIMESTAMP NULL DEFAULT NULL,
PRIMARY KEY (`Pid`)
);



CREATE TABLE `GameStatus` (
 `status` enum('not active', 'waiting', 'playing', 'finished', 'aborded') NOT NULL DEFAULT 'not active',
 `pturn` INTEGER DEFAULT NULL,
 `result` ENUM('P1','P2', 'P3', 'P4') DEFAULT NULL,
 `last_change` timestamp NULL DEFAULT NULL
);
insert INTO game_status VALUES ('not active', NULL, NULL, NULL);




CREATE TABLE `GameState` (
 `Pid` INTEGER,
 `Said` VARCHAR(2) DEFAULT NULL,
 `c1` TINYINT NULL DEFAULT NULL,
 `c2` TINYINT NULL DEFAULT NULL,
 `c3` TINYINT NULL DEFAULT NULL,
 `c4` TINYINT NULL DEFAULT NULL
);

/***********************************************************/

DELIMITER $$
CREATE PROCEDURE Splithands()
BEGIN
	
	SET @rownum = 0;
	
	UPDATE Cards SET Pid = ((@rownum:=@rownum+1) % 4) + 1 ORDER BY RAND();
		
END $$

/***********************************************************/

DELIMITER $$
CREATE PROCEDURE Play (IN p INTEGER, IN c1 TINYINT, IN c2 TINYINT, IN c3 TINYINT, IN c4 TINYINT, IN say enum('1', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K'))
BEGIN
SET @counter = 0;

IF (c1 IS NULL OR c1='')THEN
	SELECT @counter := @counter+1; 
END IF;

IF (c2 IS NULL OR c2='') THEN
   SELECT @counter := @counter+1;
END IF;

IF (c3 IS NULL OR c3='') THEN
   SELECT @counter := @counter+1;
END IF;

IF (c4 IS NULL OR c4='') THEN
   SELECT @counter := @counter+1;
END IF;

SET @TimesInHand := (SELECT COUNT(*) FROM cards WHERE pid=p AND (cid=c1 OR cid=c2 OR cid=c3 OR cid=c4));

SELECT COUNT(*) FROM cards WHERE c1=NULL OR c2=NULL OR c3=NULL OR c4=NULL ;

IF @TimesInHand = 4 - @counter THEN 

	UPDATE cards SET 
	pid = 0
	WHERE cid=c1 OR cid=c2 OR cid=c3 OR cid=c4 ;
	

/*	
edo pera tha mpi to an ekane mpolfa
INSERT INTO gamestate VALUES (p, , c1, c2, c3, c4)
*/
ELSE
	SELECT @TimesInHand;
END IF;
	
	
END $$

/***********************************************************/


DELIMITER $$
CREATE PROCEDURE Broom ()
BEGIN	

	UPDATE cards SET 
	pid = NULL
	WHERE pid=0;
	
END $$

/***********************************************************/

DELIMITER $$
CREATE PROCEDURE PickUpBoardCards ()
BEGIN	

	UPDATE cards SET 
	pid = p
	WHERE pid=0;
	
END $$